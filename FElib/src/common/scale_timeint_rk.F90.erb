!-------------------------------------------------------------------------------
! Warning: This file was generated from <%=__FILE__%>.
!          Do not edit this file.
!-------------------------------------------------------------------------------
!-------------------------------------------------------------------------------
#include "scaleFElib.h"
module scale_timeint_rk
  !-----------------------------------------------------------------------------
  !
  !++ Used modules
  !
  use scale_precision
  use scale_io
  use scale_prc
  use scale_prof

  !-----------------------------------------------------------------------------
  implicit none
  private

  !-----------------------------------------------------------------------------
  !
  !++ Public type, procedures
  !
  type, public :: timeint_rk
    real(RP) :: dt

    integer :: rk_scheme_id
    integer :: var_num
    integer, allocatable :: size_each_var(:)
    integer :: nstage
    integer :: tend_buf_size

    real(RP), allocatable :: coef_a(:,:)
    real(RP), allocatable :: coef_b(:)
    real(RP), allocatable :: coef_c(:)

    integer, allocatable :: tend_buf_indmap(:)
% for d in 1..3
    real(RP), allocatable :: tend_buf<%=d%>D(<%=(":,"*(d+2)).chop%>)
    real(RP), allocatable :: var0_<%=d%>D(<%=(":,"*(d+1)).chop%>)
    real(RP), allocatable :: varTmp_<%=d%>D(<%=(":,"*(d+1)).chop%>)    
% end

    logical :: low_storage_flag
    integer :: ndim
  contains
    procedure :: Init => timeint_rk_Init
    procedure :: Final => timeint_rk_Final
% for d in 1..3    
    procedure :: Advance<%=d%>D => timeint_rk_advance<%=d%>D
% end
    generic :: Advance => Advance1D, Advance2D, Advance3D
  end type

  !-----------------------------------------------------------------------------
  !
  !++ Public parameters & variables
  !
  !-----------------------------------------------------------------------------
  !
  !++ Private procedures
  !
  !-------------------

  integer, parameter :: RK_SCHEME_TVD_3 = 1

contains

!----------------

  subroutine timeint_rk_Init( this,  &
    rk_scheme_name, dt, var_num, ndim, size_each_var )
    
    class(timeint_rk), intent(inout) :: this
    character(*), intent(in) :: rk_scheme_name
    real(RP), intent(in) :: dt
    integer, intent(in) :: var_num
    integer, intent(in) :: ndim
    integer, intent(in) :: size_each_var(ndim)

    !----------------------------------------

    this%dt = dt
    this%ndim = ndim
    this%var_num  = 1
    allocate( this%size_each_var(ndim) )
    this%size_each_var(:) = size_each_var(:)

    select case(rk_scheme_name)
    case('RK_4')
      this%nstage = 4
      this%tend_buf_size = 1
      this%low_storage_flag = .false.
    case('RK_TVD_2')
      this%nstage = 2
      this%tend_buf_size = 1
      this%low_storage_flag = .true.
    case('RK_TVD_3')
      this%nstage = 3
      this%tend_buf_size = 1
      this%low_storage_flag = .true.
    case default
      LOG_ERROR("timeint_rk_Init",*) trim(rk_scheme_name)//' is not supported. Check!'
      call PRC_abort
    end select

    allocate ( this%coef_a(this%nstage,this%nstage), this%coef_b(this%nstage), this%coef_c(this%nstage) )
    select case(this%ndim)
% for d in 1..3
    case(<%=d%>)
% str = ""
% for i in 1..d
%   str << "size_each_var(#{i}),"
% end
% str.chop!
      allocate( this%tend_buf<%=d%>D(<%=str%>, var_num, this%tend_buf_size) )
      allocate( this%var0_<%=d%>D(<%=str%>, var_num) )
      if (.not. this%low_storage_flag) allocate( this%varTmp_<%=d%>D(<%=str%>, var_num) )        
% end
    end select
    allocate( this%tend_buf_indmap(this%nstage) )

    this%coef_a(:,:) = 0.0_RP
    this%coef_b(:) = 0.0_RP
    this%coef_c(:) = 0.0_RP

    select case(rk_scheme_name)
    case('RK_4')
      this%coef_a(2,1) = 0.5_RP
      this%coef_a(3,2) = 0.5_RP
      this%coef_a(4,3) = 1.0_RP
      this%coef_b(:) = (/ 1.0_RP, 2.0_RP, 2.0_RP, 1.0_RP /)/6.0_RP
      this%tend_buf_indmap(:) = 1
    case('RK_TVD_2')
      this%coef_a(1,1) = 1.0_RP
      this%coef_a(2,2) = 0.5_RP
      this%tend_buf_indmap(:) = 1
    case('RK_TVD_3')
      this%coef_a(1,1) = 1.0_RP
      this%coef_a(2,2) = 1.0_RP/4.0_RP
      this%coef_a(3,3) = 2.0_RP/3.0_RP
      this%tend_buf_indmap(:) = 1
    end select
    return
  end subroutine timeint_rk_Init

  subroutine timeint_rk_Final( this )

    class(timeint_rk), intent(inout) :: this
    !----------------------------------------
    
    deallocate( this%coef_a, this%coef_b, this%coef_c )
    select case(this%ndim)
% for d in 1..3      
    case(<%=d%>)
      deallocate( this%tend_buf<%=d%>D, this%var0_<%=d%>d )
      if (.not. this%low_storage_flag) deallocate( this%varTmp_<%=d%>d )
%end
    end select
    
    return
  end subroutine timeint_rk_Final

  !----------------

% for d in 1..3

% ind_range_list = ["is, ie", "js, je", "ks, ke"]
% ind_arg = ""
% for i in 1..d
%   ind_arg << ind_range_list[i-1] << " ,"
% end
% ind_arg.chop!
  subroutine timeint_rk_advance<%=d%>D( this, nowstage, q, varID, <%=ind_arg%>)
    class(timeint_rk), intent(inout) :: this
    integer, intent(in) :: nowstage
    real(RP), intent(inout) :: q(<%=(":,"*d).chop%>)
    integer, intent(in) :: varID
    integer, intent(in) :: <%=ind_arg%>

    !----------------------------------------    
 
    if (this%low_storage_flag) then
      call rk_advance_low_storage<%=d%>D( this, nowstage, q, varID, <%=ind_arg%>)
    else
      call rk_advance_general<%=d%>D( this, nowstage, q, varID, <%=ind_arg%> )
    end if

  end subroutine timeint_rk_advance<%=d%>D
% end

!-------------------

% for d in 1..3

% ind_range_list = ["is, ie", "js, je", "ks, ke"]
% ind_name = ["i", "j", "k"]
% ind_arg = ""
% ind_ary = ""
% for i in 1..d
%   ind_arg << ind_range_list[i-1] << " ,"
%   ind_ary << ind_name[i-1] << ","
% end
% ind_arg.chop!
% ind_ary.chop!

  subroutine rk_advance_low_storage<%=d%>D( this, nowstage, q, varID, <%=ind_arg%> )
    class(timeint_rk), intent(inout) :: this
    integer, intent(in) :: nowstage
    real(RP), intent(inout) :: q(<%=(":,"*d).chop%>)
    integer, intent(in) :: varID
    integer, intent(in) :: <%=ind_arg%>

    integer :: <%=ind_ary%>
    real(RP) :: a_ss

    !----------------------------------------    

    call PROF_rapstart( 'rk_advance_low_storage', 3)    
    if (nowstage == 1) then
% for i in 1..d
      do <%=ind_name[d-i]%>=<%=ind_range_list[d-i]%>
%end
        this%var0_<%=d%>D(<%=ind_ary%>,varID) = q(<%=ind_ary%>)
% for i in 1..d
      end do
% end
    end if   
    a_ss = this%coef_a(nowstage,nowstage)
% for i in 1..d
    do <%=ind_name[d-i]%>=<%=ind_range_list[d-i]%>
%end
      q(<%=ind_ary%>) = (1.0_RP - a_ss)*this%var0_<%=d%>d(<%=ind_ary%>,varID)                   &
              + a_ss*(q(<%=ind_ary%>) + this%dt * this%tend_buf<%=d%>D(<%=ind_ary%>,varID,1) )
% for i in 1..d
    end do
% end
    call PROF_rapend( 'rk_advance_low_storage', 3)

  end subroutine rk_advance_low_storage<%=d%>D
% end

% for d in 1..3

% ind_range_list = ["is, ie", "js, je", "ks, ke"]
% ind_name = ["i", "j", "k"]
% ind_arg = ""
% ind_ary = ""
% for i in 1..d
%   ind_arg << ind_range_list[i-1] << " ,"
%   ind_ary << ind_name[i-1] << ","
% end
% ind_arg.chop!
% ind_ary.chop!
  subroutine rk_advance_general<%=d%>D( this, nowstage, q, varID, <%=ind_arg%> )
    class(timeint_rk), intent(inout) :: this
    integer, intent(in) :: nowstage
    real(RP), intent(inout) :: q(<%=(":,"*d).chop%>)
    integer, intent(in) :: varID
    integer, intent(in) :: <%=ind_arg%>

    integer :: <%=ind_ary%>
    integer :: s
    !----------------------------------------    

    if (nowstage == 1) then
% for i in 1..d
      do <%=ind_name[d-i]%>=<%=ind_range_list[d-i]%>
% end      
        this%var0_<%=d%>D(<%=ind_ary%>,varID) = q(<%=ind_ary%>)
        this%varTmp_<%=d%>D(<%=ind_ary%>,varID) = q(<%=ind_ary%>)
% for i in 1..d
      end do
% end
    else if (nowstage == this%nstage ) then
% for i in 1..d
      do <%=ind_name[d-i]%>=<%=ind_range_list[d-i]%>
% end    
        q(<%=ind_ary%>) =  this%varTmp_<%=d%>d(<%=ind_ary%>,varID)                                             &
              + this%dt * this%coef_b(nowstage) * this%tend_buf<%=d%>D(<%=ind_ary%>,varID,1)
% for i in 1..d
      end do
% end
      return
    end if 
    if (this%tend_buf_size == 1) then
% for i in 1..d
      do <%=ind_name[d-i]%>=<%=ind_range_list[d-i]%>
% end 
        this%varTmp_<%=d%>d(<%=ind_ary%>,varID) =  this%varTmp_<%=d%>d(<%=ind_ary%>,varID)                          &
            +  this%dt * this%coef_b(nowstage)*this%tend_buf<%=d%>d(<%=ind_ary%>,varID,1)
        q(<%=ind_ary%>) = this%var0_<%=d%>d(<%=ind_ary%>,varID)                                                &
            +  this%dt * this%coef_a(nowstage+1,nowstage)*this%tend_buf<%=d%>d(<%=ind_ary%>,varID,1)
% for i in 1..d
      end do
% end
    else
% for i in 1..d
      do <%=ind_name[d-i]%>=<%=ind_range_list[d-i]%>
% end 
        this%varTmp_<%=d%>d(<%=ind_ary%>,varID) =  this%varTmp_<%=d%>d(<%=ind_ary%>,varID)                             &
            +  this%dt * this%coef_b(nowstage)*this%tend_buf<%=d%>d(<%=ind_ary%>,varID,1)
        q(<%=ind_ary%>) = this%var0_<%=d%>d(<%=ind_ary%>,varID)               
% for i in 1..d
      end do
% end
      do s=1, nowstage
% for i in 1..d
      do <%=ind_name[d-i]%>=<%=ind_range_list[d-i]%>
% end 
        q(<%=ind_ary%>) = q(<%=ind_ary%>)                                                             &
            +  this%dt * this%coef_a(s,nowstage)*this%tend_buf<%=d%>d(<%=ind_ary%>,varID,s)
% for i in 1..d
      end do
% end    
      end do
    end if

  end subroutine rk_advance_general<%=d%>D
% end
end module scale_timeint_rk

